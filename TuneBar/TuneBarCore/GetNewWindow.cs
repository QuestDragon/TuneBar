using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Automation;
using System.Xml.Linq;

namespace TuneBar
{
    internal class GetNewWindow
    {
        //Generated by ChatGPT4

        public static int New_Window_HandleID = 0;
        public static string New_Window_Name = "";

        /// <summary>
        /// 新規ウィンドウを検知するフックの開始
        /// </summary>
        public static void StartMonitoring()
        {
            Automation.AddAutomationEventHandler(WindowPattern.WindowOpenedEvent, AutomationElement.RootElement, TreeScope.Children, OnWindowOpened);
            // Automation.RemoveAllEventHandlers();
            Debug.WriteLine("ウィンドウイベントフックの監視を開始しました。");
        }

        /// <summary>
        /// 新規ウィンドウを検知するフックの解除
        /// </summary>
        public static void StopMonitoring()
        {
            Automation.RemoveAllEventHandlers();
            Debug.WriteLine("ウィンドウイベントフックの監視を停止しました。");
        }

        /// <summary>
        /// 新規ウィンドウを検知した際に実行されるイベント。
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="automationEventArgs"></param>
        private static void OnWindowOpened(object sender, AutomationEventArgs automationEventArgs)
        {
            // System.Media.SystemSounds.Beep.Play(); //デバッグ用 - システム音が再生できる。

            try
            {
                var element = sender as AutomationElement;
                if (element != null)
                {
                    // ウィンドウのタイトルを取得
                    string windowTitle = element.Current.Name;

                    // ウィンドウハンドルを取得
                    int hwnd = (int)element.GetCurrentPropertyValue(AutomationElementIdentifiers.NativeWindowHandleProperty);

                    Debug.WriteLine($"新しいウィンドウが開かれました: {windowTitle}, ハンドルID: {hwnd}");

                    New_Window_HandleID = hwnd;
                    New_Window_Name = windowTitle;
                    GetWindow.DetectedNewWindow = true;
                }
                else
                {
                    Debug.WriteLine("New Window is not found!");
                }
            }
            catch (ElementNotAvailableException)
            {
                Debug.WriteLine("New Window is not available!");
            }
        }
    }
}
